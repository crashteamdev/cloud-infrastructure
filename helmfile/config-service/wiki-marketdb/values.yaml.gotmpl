# -*- mode: yaml -*-
nameOverride: "wiki-marketdb"

replicaCount: 1

nodeSelector:
  ingress: "true"

service:
  type: ClusterIP
  ports:
    - name: http
      port: 80

volumes:
  - name: config-volume
    configMap:
      name: yc-ca
      defaultMode: 0755

volumeMounts:
  - name: config-volume
    mountPath: /opt/ca.pem
    subPath: ca.pem
    readOnly: true

resources:
  requests:
    memory: 64Mi

livenessProbe:
  httpGet:
    path: /healthz
    port: http

readinessProbe:
  httpGet:
    path: /healthz
    port: http

startupProbe:
  initialDelaySeconds: 15
  periodSeconds: 5
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 60
  httpGet:
    path: /healthz
    port: http

postgresql:
  enabled: false
  postgresqlDatabase: mdb-wiki
{{/*  postgresqlUser: {{ .Values.services.postgres.uniUser }}*/}}
{{/*  postgresqlHost: {{ .Values.services.postgres.endpoint }}*/}}
{{/*  postgresqlPort: 6432*/}}
{{/*  ssl: true*/}}
{{/*  ca: /opt/ca.pem*/}}

externalPostgresql:
  databaseURL: postgresql://{{ .Values.services.postgres.endpoint }}:6432/dbuser?ssl=true
  NODE_TLS_REJECT_UNAUTHORIZED: "0"

{{ $domainWithNamespace := printf "%s.%s" .Release.Namespace .Values.services.ingress.rootDomain }}
{{ $ingressDomain := .Values.services.ingress.rootDomain }}

ingress:
  enabled: true
  annotations:
{{- if .Values.services.ingress.tls.letsEncrypt.enabled }}
    cert-manager.io/cluster-issuer: {{ .Values.services.ingress.tls.letsEncrypt.issuer }}
{{- end }}
    kubernetes.io/ingress.class: {{ .Values.services.ingress.class | quote }}
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
       more_set_headers "Access-Control-Allow-Origin: $http_origin";
  hosts:
    - host: wiki.{{ $ingressDomain | default "crashteam.dev" }}
      paths:
        - path: "/"
          pathType: Prefix
{{- if .Values.services.ingress.tls.enabled }}
  tls:
  {{ if .Values.services.ingress.tls.letsEncrypt.enabled }}
    - secretName: {{ .Release.Name }}-{{ .Values.services.ingress.tls.secretName }}
  {{- else }}
    - secretName: {{ .Values.services.ingress.tls.secretName }}
  {{- end }}
      hosts:
        - wiki.{{ $ingressDomain | default "crashteam.dev" }}
{{- end }}
  servicePort: 80
