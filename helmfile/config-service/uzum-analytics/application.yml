{{- $applicationName := .Release.Name -}}

server:
  port: {{ .Values.services.global.java.apiPort }}

logback:
  appender: JSON_K8S_CONSOLE

logging:
  level:
    dev.crashteam.uzumanalytics.service: INFO
    dev.crashteam.uzumanalytics.rpc: INFO
    dev.crashteam.uzumanalytics.repository.clickhouse.CHCategoryRepository: DEBUG
    dev.crashteam.uzumanalytics.repository.clickhouse.mapper: INFO

spring:
  application:
    name: {{ $applicationName }}
  data:
    redis:
      port: 6380
      username: default
      ssl:
        enable: true
  quartz:
    jdbc:
      job-store-type: jdbc
      initialize-schema: never
    properties:
      org.quartz.scheduler.instanceName: UzumMasterScheduler
      org.quartz.scheduler.instanceId: AUTO
      org.quartz.scheduler.skipUpdateCheck: true
      org.quartz.scheduler.threadsInheritContextClassLoaderOfInitializer: true
      org.quartz.threadPool.threadCount: 30
      org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool
      org.quartz.jobStore.isClustered: true
      org.quartz.jobStore.misfireThreshold: 30000
      org.quartz.jobStore.useProperties: true
      org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
  datasource:
    driver-class-name: org.postgresql.Driver

management:
  server:
    port: {{ .Values.services.global.java.managementPort }}
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: {{ $applicationName }}
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,prometheus

service:
  proxy:
    url: http://styx:8080

uzum:
  scheduleEnabled: true
  groupCron: '0 0 0/6 * * ?'
  productCron: '0 0 0 * * ?'
  pendingMessageCron: '0 0/10 * * * ?'
  apiLimit:
    maxIp: 4
    maxBrowser: 3
    blockRemoveHour: 2

clickhouse:
  ssl: true
  connectionTimeout: 420000
  socketTimeout: 400000

aws-stream:
  kinesisEndpoint: 'yds.serverless.yandexcloud.net/ru-central1/b1gtojcphtuae1n9siie/etnvck8jo3kuh0vilc57'
  dinamoDbEndpoint: 'docapi.serverless.yandexcloud.net/ru-central1/b1gtojcphtuae1n9siie/etnvck8jo3kuh0vilc57'
  uzum-stream:
    name: '/ru-central1/b1gtojcphtuae1n9siie/etnvck8jo3kuh0vilc57/uzum-stream'
    maxRecords: 250
    timeoutInSec: 60
    failOverTimeMillis: 60000
    consumerName: uzum-analytics-consumer
  payment-stream:
    name: '/ru-central1/b1gtojcphtuae1n9siie/etnvck8jo3kuh0vilc57/mdb-payment'
    maxRecords: 50
    timeoutInSec: 60
    failOverTimeMillis: 60000
    consumerName: uzum-payment-consumer
