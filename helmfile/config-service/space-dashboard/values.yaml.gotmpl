# -*- mode: yaml -*-
{{- $applicationName := .Release.Name -}}

replicaCount: 1

nodeSelector:
  ingress: "true"

image:
  repository: ghcr.io/crashteamdev/space-dashboard
  tag: sha-6b5015c
  pullPolicy: IfNotPresent

{{ if .Values.services.global.registry.imagePullSecret }}
imagePullSecrets:
  - name: {{ .Values.services.global.registry.imagePullSecret }}
{{ end }}

service:
  type: ClusterIP
  ports:
    - name: http
      port: 3000

configMap:
  data:
    appConfig.json: |
      {{- tpl (readFile "appConfig.json.gotmpl") . | nindent 6 }}
    checkout.conf: |
      {{- readFile "vhost.conf" | nindent 6 }}
    10_json_logs.conf: |
      {{- readFile "json_logs.conf" | nindent 6 }}

volumeMounts:
  - name: config-volume
    mountPath: /usr/share/nginx/html/appConfig.json
    subPath: appConfig.json
    readOnly: true
  - name: config-volume
    mountPath: /etc/nginx/conf.d/checkout.conf
    subPath: checkout.conf
    readOnly: true
  - name: config-volume
    mountPath: /etc/nginx/conf.d/10_json_logs.conf
    subPath: 10_json_logs.conf
    readOnly: true

volumes:
  - name: config-volume
    configMap:
      name: {{ .Release.Name }}

livenessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 30
  timeoutSeconds: 5
readinessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 30
  timeoutSeconds: 5

resources:
  requests:
    memory: 64Mi

{{ $domainWithNamespace := printf "%s.%s" .Release.Namespace .Values.services.ingress.rootDomain }}
{{ $ingressDomain := .Values.services.ingress.namespacedDomain | ternary $domainWithNamespace .Values.services.ingress.rootDomain }}

ingress:
  enabled: true
  annotations:
{{- if .Values.services.ingress.tls.letsEncrypt.enabled }}
    cert-manager.io/cluster-issuer: {{ .Values.services.ingress.tls.letsEncrypt.issuer }}
{{- end }}
    kubernetes.io/ingress.class: {{ .Values.services.ingress.class | quote }}
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
{{/*    nginx.ingress.kubernetes.io/configuration-snippet: |*/}}
{{/*      try_files $uri $uri/ $uri/index.html /index.html;*/}}
{{/*    nginx.ingress.kubernetes.io/add-base-url: "true"*/}}
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/configuration-snippet: |
       more_set_headers "Access-Control-Allow-Origin: $http_origin";
  hosts:
    - host: "space.marketdb.pro"
      paths:
        - /?(.*)
{{- if .Values.services.ingress.tls.enabled }}
  tls:
  {{ if .Values.services.ingress.tls.letsEncrypt.enabled }}
    - secretName: {{ .Release.Name }}-{{ .Values.services.ingress.tls.secretName }}
  {{- else }}
    - secretName: {{ .Values.services.ingress.tls.secretName }}
  {{- end }}
      hosts:
        - "space.marketdb.pro"
{{- end }}
  servicePort: 3000
