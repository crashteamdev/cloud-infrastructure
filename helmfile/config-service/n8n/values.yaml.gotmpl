main:
  image:
    repository: n8nio/n8n
    tag: "1.44.0"
    pullPolicy: IfNotPresent

  env:
    - name: N8N_BASIC_AUTH_ACTIVE
      value: "true"
    - name: N8N_BASIC_AUTH_USER
      valueFrom:
        secretKeyRef:
          name: n8n-secrets
          key: basic-auth-user
    - name: N8N_BASIC_AUTH_PASSWORD
      valueFrom:
        secretKeyRef:
          name: n8n-secrets
          key: basic-auth-password
    - name: DB_TYPE
      value: postgres
    - name: DB_POSTGRESDB_HOST
      value: {{ .Values.services.postgres.endpoint }}
    - name: DB_POSTGRESDB_PORT
      value: "6432"
    - name: DB_POSTGRESDB_DATABASE
      value: n8n
    - name: DB_POSTGRESDB_USER
      value: {{ .Values.services.postgres.uniUser }}
    - name: DB_POSTGRESDB_PASSWORD
      value: {{ .Values.services.postgres.uniPassword }}
    - name: N8N_ENCRYPTION_KEY
      valueFrom:
        secretKeyRef:
          name: n8n-secrets
          key: encryption-key
    - name: N8N_LOG_LEVEL
      value: info
    - name: N8N_METRICS
      value: "true"
    - name: N8N_METRICS_PORT
      value: "5678"

  persistence:
    enabled: false
    accessMode: ReadWriteOnce
    size: 10Gi
    storageClass: yc-network-hdd

  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 1
      memory: 2Gi

  livenessProbe:
    httpGet:
      path: /healthz
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6

  readinessProbe:
    httpGet:
      path: /healthz
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6

  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: {{ .Values.services.ingress.class | quote }}
  annotations:
    kubernetes.io/ingress.class: {{ .Values.services.ingress.class | quote }}
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
  hosts:
    - host: "n8n.crashteam.dev"
      paths:
        - /
  tls:
    - secretName: n8n-tls
      hosts:
        - "n8n.crashteam.dev"

postgresql:
  enabled: false

externalDatabase:
  type: postgres
  host: {{ .Values.services.postgres.endpoint }}
  port: 6432
  database: n8n
  user: {{ .Values.services.postgres.uniUser }}
  password: {{ .Values.services.postgres.uniPassword }}

nodeSelector:
  mdb-service: "true"
